package inventory;
import items.ItemType;
import items.Items;
import items.ItemShelf;
public class Inventory {
    private  ItemShelf[] inventory;
    public Inventory(int n){
        inventory =new ItemShelf[n];
        initialEmptyInventory();
    }

    public ItemShelf[] getInventory() {
        return this.inventory;
    }
    public void setInventory(ItemShelf[] inventory){
        this.inventory=inventory;
    }
    public void initialEmptyInventory(){
        int startcode=101;
        for(int i=0;i<inventory.length;i++){
            ItemShelf itemShelf=new ItemShelf();
            itemShelf.setItemcode(startcode);
            itemShelf.setSoldOut(true);
            inventory[i]=itemShelf;
            startcode++;
        }
    }
    public void addItem(Items items,int itemcode){
        for(ItemShelf shelf :inventory){
            if(shelf.getItemCode()==itemcode){
                if(shelf.isSoldOut()==true){
                    shelf.setItems(items);
                    shelf.setSoldOut(false);
                }

            }
        }
    }


    public Items getItem(int itemcode){
        for(ItemShelf shelf:inventory){
            if(shelf.getItemCode()==itemcode){
                if(shelf.isSoldOut()){
                    System.out.println("Item is already soldout");
                    return new Items();
                }
                else {
                    return shelf.getItems();
                }
            }
        }
        System.out.println("Invalid item code");
        return new Items();
    }

    public void updateSoldOutItem(int itemCodeNumber){
        for(ItemShelf shelf:inventory){
            if(shelf.getItemCode()==itemCodeNumber){
                shelf.setSoldOut(true);
            }
        }
    }
}
